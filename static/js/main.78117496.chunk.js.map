{"version":3,"sources":["Firebase.js","VideoFooter.js","VideoHeader.js","VideoCard.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","VideoFooter","song","avatarSrc","likes","shares","channel","isLiked","setIsLiked","useState","isFollow","setIsFollow","className","Avatar","src","Button","style","textShadow","value","onClick","e","event","val","innerText","innerHTML","setFollowing","target","mode","index","color","fontSize","VideoHeader","VideoCard","url","alt","loop","autoPlay","playsInline","muted","onDoubleClick","App","reels","setReels","useEffect","collection","onSnapshot","snapshot","docs","map","doc","data","reel","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78117496.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyA4uyBL68T7v2GMwmftdjrpZ5pSZp3WOss\",\r\n    authDomain: \"insta-reels-clone123.firebaseapp.com\",\r\n    projectId: \"insta-reels-clone123\",\r\n    storageBucket: \"insta-reels-clone123.appspot.com\",\r\n    messagingSenderId: \"610466267465\",\r\n    appId: \"1:610466267465:web:8ad55ab6b2c57c9e161a98\",\r\n    measurementId: \"G-DL23V35F0V\"\r\n})\r\nconst db = firebaseApp.firestore();\r\n \r\nexport default db;","import React, { useState } from 'react'\r\nimport \"./VideoFooter.css\";\r\nimport {Button, Avatar} from \"@material-ui/core\"\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\"\r\nimport Ticker from 'react-ticker';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ModeCommentIcon from '@material-ui/icons/ModeComment';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nfunction VideoFooter({song, avatarSrc, likes, shares, channel, isLiked, setIsLiked}) {\r\n    const [isFollow, setIsFollow] = useState(\"Follow\");\r\n    \r\n    const setFollowing = (event) => {\r\n        let val = event.innerText;\r\n        setIsFollow(val === \"Follow\"?event.innerHTML = `<span style=\"color: #41d3ff;text-shadow: 5px 5px 9px black;\">Following</span>`:event.innerHTML = `<span style=\"color: white;text-shadow: 5px 5px 9px black;\">Follow</span>`);\r\n    }\r\n    const setLike = () => {\r\n        setIsLiked(!isLiked);\r\n    }\r\n    return (\r\n        <div className=\"videoFooter\">\r\n            <div className=\"videoFooter__text\">\r\n                <Avatar src={avatarSrc} />\r\n                <h3>\r\n                    {channel} â€¢ <Button style={{textShadow: \"5px 5px 9px black\"}} value={isFollow} onClick={(e) => setFollowing(e.target)}>{isFollow}</Button>\r\n                </h3>\r\n            </div>\r\n            <div className=\"videoFooter__ticker\">\r\n                <MusicNoteIcon className=\"videoFooter__icon\" />\r\n                <Ticker mode=\"smooth\">\r\n                    {({index}) => (\r\n                        <>\r\n                            <h1>{song}</h1>\r\n                        </>\r\n                    )}\r\n                </Ticker>\r\n            </div>\r\n            <div className=\"videoFooter__actions\">\r\n                <div className=\"videoFooter__actionLeft\">\r\n                    <FavoriteIcon onClick={setLike} style={isLiked?{color:\"red\"}:{color:\"white\"}} />\r\n                    <ModeCommentIcon />\r\n                    <SendIcon />\r\n                    <MoreHorizIcon  />\r\n                </div>\r\n                <div className=\"videoFooter__actionRight\">\r\n                    <div className=\"videoFooter__stat\">\r\n                        <FavoriteIcon fontSize=\"small\" />\r\n                        <p>{isLiked?likes + 1:likes}</p>\r\n                    </div>\r\n                    <div className=\"videoFooter__stat\">\r\n                        <ModeCommentIcon fontSize=\"small\" />\r\n                        <p>{shares}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoFooter\r\n","import React from 'react'\r\nimport \"./VideoHeader.css\"\r\nimport CameraAltOutlinedIcon from \"@material-ui/icons/CameraAltOutlined\"\r\n\r\n\r\nfunction VideoHeader() {\r\n    return (\r\n        <div className=\"videoHeader\">\r\n            <h2>Reels</h2>\r\n            <CameraAltOutlinedIcon />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoHeader\r\n","import React, { useState } from 'react'\r\nimport \"./VideoCard.css\";\r\nimport VideoFooter from './VideoFooter';\r\nimport VideoHeader from './VideoHeader';\r\n\r\n\r\nfunction VideoCard({url, likes, shares, channel, avatarSrc, song}) {\r\n\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const setLike = () => {\r\n        setIsLiked(!isLiked);\r\n    }\r\n\r\n    return (\r\n        <div className=\"videoCard\"> \r\n            <VideoHeader />\r\n            <video \r\n                className=\"video__player\" \r\n                src={url} \r\n                alt=\"ig-reel-video\" \r\n                loop\r\n                autoPlay\r\n                playsInline\r\n                muted\r\n                onDoubleClick={setLike}\r\n            />\r\n            <VideoFooter \r\n                channel={channel}\r\n                likes={likes}\r\n                shares={shares}\r\n                avatarSrc={avatarSrc}\r\n                song={song}\r\n                isLiked={isLiked}\r\n                setIsLiked={setIsLiked}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoCard\r\n","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport db from './Firebase';\r\nimport VideoCard from './VideoCard';\r\n\r\nfunction App() {\r\n\r\n\tconst [reels, setReels] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tdb.collection('reels').onSnapshot(snapshot => (\r\n\t\t\tsetReels(snapshot.docs.map(doc => doc.data()))\r\n\t\t))\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t// BEM Naming Convention\r\n\t\t<div className=\"app\">\r\n\t\t\t<div className=\"app__videos\">\r\n\t\t\t\t{\r\n\t\t\t\t\treels.map((reel) => (\r\n\t\t\t\t\t\t<VideoCard\r\n\t\t\t\t\t\t\tkey={reel.id}\r\n\t\t\t\t\t\t\tchannel={reel.channel}\r\n\t\t\t\t\t\t\tavatarSrc={reel.avatarSrc}\r\n\t\t\t\t\t\t\tsong={reel.song}\r\n\t\t\t\t\t\t\turl={reel.url}\r\n\t\t\t\t\t\t\tlikes={reel.likes}\r\n\t\t\t\t\t\t\tshares={reel.shares}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}